declare const _default: <T extends {
    width: number;
    height: number;
}>(__VLS_props: {
    items: T[];
    columnsNum: number;
    columnWidth: number;
    gap: number;
} & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, __VLS_ctx?: {
    attrs: any;
    emit: any;
    slots: {
        default?(_: {
            item: import("@vue/reactivity").UnwrapRefSimple<T>;
            column: number;
            row: number;
        }): any;
    };
} | undefined, __VLS_expose?: ((exposed: import('vue').ShallowUnwrapRef<{}>) => void) | undefined, __VLS_setup?: Promise<{
    props: {
        items: T[];
        columnsNum: number;
        columnWidth: number;
        gap: number;
    } & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps;
    expose(exposed: import('vue').ShallowUnwrapRef<{}>): void;
    attrs: any;
    slots: {
        default?(_: {
            item: import("@vue/reactivity").UnwrapRefSimple<T>;
            column: number;
            row: number;
        }): any;
    };
    emit: any;
}>) => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}> & {
    __ctx?: {
        props: {
            items: T[];
            columnsNum: number;
            columnWidth: number;
            gap: number;
        } & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps;
        expose(exposed: import('vue').ShallowUnwrapRef<{}>): void;
        attrs: any;
        slots: {
            default?(_: {
                item: import("@vue/reactivity").UnwrapRefSimple<T>;
                column: number;
                row: number;
            }): any;
        };
        emit: any;
    } | undefined;
};
export default _default;
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
